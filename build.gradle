import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'org.jetbrains.kotlin.jvm' version "2.2.20-Beta2"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	maven { url "https://maven.blamejared.com" }
	maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://jitpack.io" }
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url "https://mvn.devos.one/snapshots/" }
}

loom {
	// why does this let it build?
	// i hope i don't want to write client-side code anytime soon
	//splitEnvironmentSourceSets()

	mods {
		"lessertp" {
			sourceSet sourceSets.main
			//sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// hexcasting (please work man)
	modImplementation ("at.petra-k.hexcasting:hexcasting-fabric-${project.minecraft_version}:${project.hexcasting_version}") {
		exclude module: "phosphor"
		exclude module: "lithium"
		exclude module: "emi"
	}
	// i had the wrong ver last time, it was for 1.19.2 (LMFAO)
	// apparently i have to get the dependencies manually now? that's sum bullshit but ok
	modImplementation("net.fabricmc:fabric-language-kotlin:1.13.4+kotlin.2.2.0")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-block:${project.cca_version}")
	modImplementation("at.petra-k:paucal:0.6.1-pre-7+1.20.1-fabric")
	modImplementation("vazkii.patchouli:Patchouli:1.20.1-84.1-FABRIC")
	modImplementation("com.samsthenerd.inline:inline-fabric:1.20.1-1.2.2-12")
	modApi "me.shedaniel.cloth:cloth-config-fabric:11.1.136"
	//modImplementation(include("io.github.tropheusj:serialization-hooks:0.4.27"))
	modLocalRuntime files("${rootProject.rootDir}\\libs\\serialization-hooks-0.4.99999.jar")
	// Why must I have an obscure ass file just to make a Hexcasting addon?
	// It makes no sense.
	// What's with the version, too?
	// It reads like someone's entire life was poured into it.
	// Motherfucker skipped 28-99998.
	implementation("ws.schild:jave-core:3.5.0")
	implementation("ws.schild:jave-nativebin-win64:3.5.0")
	// augh fuck it no modmenu just commands
	//modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}
tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
